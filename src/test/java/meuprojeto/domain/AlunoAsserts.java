package meuprojeto.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AlunoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlunoAllPropertiesEquals(Aluno expected, Aluno actual) {
        assertAlunoAutoGeneratedPropertiesEquals(expected, actual);
        assertAlunoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlunoAllUpdatablePropertiesEquals(Aluno expected, Aluno actual) {
        assertAlunoUpdatableFieldsEquals(expected, actual);
        assertAlunoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlunoAutoGeneratedPropertiesEquals(Aluno expected, Aluno actual) {
        assertThat(actual)
            .as("Verify Aluno auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlunoUpdatableFieldsEquals(Aluno expected, Aluno actual) {
        assertThat(actual)
            .as("Verify Aluno relevant properties")
            .satisfies(a -> assertThat(a.getNome()).as("check nome").isEqualTo(expected.getNome()))
            .satisfies(a -> assertThat(a.getEmail()).as("check email").isEqualTo(expected.getEmail()))
            .satisfies(a -> assertThat(a.getDataNascimento()).as("check dataNascimento").isEqualTo(expected.getDataNascimento()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlunoUpdatableRelationshipsEquals(Aluno expected, Aluno actual) {
        // empty method
    }
}
